{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\spagh\\\\Desktop\\\\Spider\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\spagh\\\\Desktop\\\\Spider\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\spagh\\\\Desktop\\\\Spider\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\spagh\\\\Desktop\\\\Spider\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\spagh\\\\Desktop\\\\Spider\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\spagh\\\\Desktop\\\\Spider\\\\src\\\\components\\\\Species.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"popper.js\";\nimport \"bootstrap/dist/js/bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"../index.css\";\nimport Router from \"../index\";\n\nvar data = require(\"../data/species.json\");\n\nvar presentSpecies;\n\nvar Species =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Species, _Component);\n\n  function Species() {\n    _classCallCheck(this, Species);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Species).apply(this, arguments));\n  }\n\n  _createClass(Species, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(\"div\", {\n        className: \"container-fluid mb-2\",\n        style: {\n          position: \"absolute\",\n          height: \"calc(100% - 72px)\",\n          bottom: \"8px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"outer-grid\",\n        className: \"h-100\",\n        style: {\n          display: \"grid\",\n          gridTemplateColumns: \"repeat(3, 1fr)\",\n          gridTemplateRows: \"repeat(5, 1fr)\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"border h-100\",\n        style: {\n          display: \"grid\",\n          gridTemplateRows: \"1fr 0 1fr\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"common-name\",\n        className: \"cell\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        className: \"cell-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Common Name: \"), React.createElement(\"div\", {\n        className: \"cell-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        id: \"common-name-selector\",\n        className: \"form-control\",\n        defaultValue: \"\",\n        ref: function ref(input) {\n          return _this.menu = input;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, setInterval(function () {\n        presentSpecies = _this.menu.value ? _this.menu.value : undefined;\n        ReactDOM.render(React.createElement(Router, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }), document.getElementById(\"root\"));\n      }, 500), React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Select by Common Name\"), data.data.species.map(function (option) {\n        return React.createElement(\"option\", {\n          value: option.index,\n          key: option.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, option.common_name);\n      })))), React.createElement(\"hr\", {\n        className: \"m-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"latin-name\",\n        className: \"cell\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        className: \"cell-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Latin Name: \"), React.createElement(\"div\", {\n        className: \"cell-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, presentSpecies ? data.data.species[presentSpecies].latin_name : \"\"))), React.createElement(\"div\", {\n        className: \"border h-100\",\n        style: {\n          display: \"grid\",\n          gridTemplateRows: \"1fr 0 1fr 0 1fr\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"\",\n        className: \"cell\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        className: \"cell-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Missing 2: \"), React.createElement(\"div\", {\n        className: \"cell-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, presentSpecies ? data.data.species[presentSpecies].missing2 : \"\")), React.createElement(\"hr\", {\n        className: \"m-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"\",\n        className: \"cell\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        className: \"cell-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Missing 3: \"), React.createElement(\"div\", {\n        className: \"cell-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, presentSpecies ? data.data.species[presentSpecies].missing3 : \"\")), React.createElement(\"hr\", {\n        className: \"m-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"\",\n        className: \"cell\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        className: \"cell-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Missing 4: \"), React.createElement(\"div\", {\n        className: \"cell-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, presentSpecies ? data.data.species[presentSpecies].missing4 : \"\"))), React.createElement(\"div\", {\n        id: \"conservation-status\",\n        className: \"cell border h-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        className: \"cell-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Conservation Status: \"), React.createElement(\"div\", {\n        className: \"cell-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, presentSpecies ? React.createElement(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, data.data.species[presentSpecies].conservation_status.name), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        src: require(\"../data/images/conservation_status/\" + data.data.species[presentSpecies].conservation_status.icon + \".png\"),\n        style: {\n          width: \"100%\"\n        },\n        alt: \"Conservation Status Icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      })) : \"\")), React.createElement(\"div\", {\n        id: \"description\",\n        className: \"cell border h-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        className: \"cell-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Description: \"), React.createElement(\"div\", {\n        className: \"cell-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, presentSpecies ? data.data.species[presentSpecies].description : \"\")), React.createElement(\"div\", {\n        id: \"gallery\",\n        className: \"cell border h-100\",\n        style: {\n          gridArea: \"2 / 2 / 4 / 4\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cell-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"gallery-carousel\",\n        className: \"carousel slide\",\n        style: {\n          // maxHeight: 200.534,\n          // maxWidth: 500.334\n          height: document.getElementById(\"gallery\").clientHeight,\n          width: document.getElementById(\"gallery\").clientWidth\n        },\n        \"data-ride\": \"carousel\",\n        \"data-interval\": \"false\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"ol\", {\n        className: \"carousel-indicators\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, presentSpecies ? data.data.species[presentSpecies].gallery.map(function (image, index) {\n        return React.createElement(\"li\", {\n          \"data-target\": \"#gallery-carousel\",\n          \"data-slide-to\": index,\n          className: index === 0 ? \" active\" : \"\",\n          key: \"si\" + index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183\n          },\n          __self: this\n        });\n      }) : \"\", React.createElement(\"li\", {\n        \"data-target\": \"#carouselExampleIndicators\",\n        \"data-slide-to\": \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }), React.createElement(\"li\", {\n        \"data-target\": \"#carouselExampleIndicators\",\n        \"data-slide-to\": \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"carousel-inner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, presentSpecies ? data.data.species[presentSpecies].gallery.map(function (image, index) {\n        return React.createElement(\"div\", {\n          className: \"carousel-item\" + (index === 0 ? \" active\" : \"\"),\n          key: \"si\" + index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"d-block w-100\",\n          src: image,\n          style: {\n            maxHeight: 200.534,\n            maxWidth: 500.334\n          },\n          alt: \"Spider Gallery\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220\n          },\n          __self: this\n        }));\n      }) : \"\"), React.createElement(\"a\", {\n        className: \"carousel-control-prev\",\n        href: \"#gallery-carousel\",\n        role: \"button\",\n        \"data-slide\": \"prev\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"carousel-control-prev-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      })), React.createElement(\"a\", {\n        className: \"carousel-control-next\",\n        href: \"#gallery-carousel\",\n        role: \"button\",\n        \"data-slide\": \"next\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"carousel-control-next-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        id: \"\",\n        className: \"cell border h-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        className: \"cell-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, \"Missing 1: \"), React.createElement(\"div\", {\n        className: \"cell-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, presentSpecies ? data.data.species[presentSpecies].missing1 : \"\")), React.createElement(\"div\", {\n        id: \"diet\",\n        className: \"cell border h-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        className: \"cell-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, \"Diet: \"), React.createElement(\"div\", {\n        className: \"cell-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, presentSpecies ? data.data.species[presentSpecies].diet : \"\")), React.createElement(\"div\", {\n        id: \"distribution\",\n        className: \"cell border h-100\",\n        style: {\n          gridArea: \"4 / 2 / 6 / 3\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        className: \"cell-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, \"Distribution: \"), React.createElement(\"div\", {\n        className: \"cell-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, presentSpecies ? React.createElement(\"img\", {\n        src: require(\"../data/images/distribution/\" + data.data.species[presentSpecies].index + \".png\"),\n        style: {\n          maxHeight: \"100%\",\n          maxWidth: \"100%\"\n        },\n        alt: \"Species Distribution\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }) : \"\")), React.createElement(\"div\", {\n        id: \"\",\n        className: \"cell border h-100\",\n        style: {\n          gridArea: \"4 / 3 / 6 / 4\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        className: \"cell-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, \"Missing 5: \"), React.createElement(\"div\", {\n        className: \"cell-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, presentSpecies ? data.data.species[presentSpecies].missing5 : \"\")), React.createElement(\"div\", {\n        id: \"habitat\",\n        className: \"cell border h-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        className: \"cell-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, \"Habitat: \"), React.createElement(\"div\", {\n        className: \"cell-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, presentSpecies ? data.data.species[presentSpecies].habitat : \"\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }))), React.createElement(\"style\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, \"\\\r\n                        #outer-grid > div {\\\r\n                            padding: 2px;\\\r\n                        }\\\r\n                        \\\r\n                        .cell-name {\\\r\n                            font-size: 14px;\\\r\n                            margin-bottom: 2px;\\\r\n                        }\\\r\n                        .cell-content {\\\r\n                            padding: 2px 2px 0 2px;\\\r\n                            font-size: 12px;\\\r\n                        }\\\r\n                    \"));\n    }\n  }]);\n\n  return Species;\n}(Component);\n\nexport default Species;","map":{"version":3,"sources":["C:\\Users\\spagh\\Desktop\\Spider\\src\\components\\Species.js"],"names":["React","Component","ReactDOM","Router","data","require","presentSpecies","Species","position","height","bottom","display","gridTemplateColumns","gridTemplateRows","input","menu","setInterval","value","undefined","render","document","getElementById","species","map","option","index","id","common_name","latin_name","missing2","missing3","missing4","conservation_status","name","icon","width","description","gridArea","clientHeight","clientWidth","gallery","image","maxHeight","maxWidth","missing1","diet","missing5","habitat"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"popper.js\";\r\nimport \"bootstrap/dist/js/bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"../index.css\";\r\nimport Router from \"../index\";\r\n\r\nconst data = require(\"../data/species.json\");\r\n\r\nvar presentSpecies;\r\n\r\nclass Species extends Component {\r\n    render() {\r\n        return (\r\n            <div\r\n                className=\"container-fluid mb-2\"\r\n                style={{\r\n                    position: \"absolute\",\r\n                    height: \"calc(100% - 72px)\",\r\n                    bottom: \"8px\"\r\n                }}\r\n            >\r\n                <div\r\n                    id=\"outer-grid\"\r\n                    className=\"h-100\"\r\n                    style={{\r\n                        display: \"grid\",\r\n                        gridTemplateColumns: \"repeat(3, 1fr)\",\r\n                        gridTemplateRows: \"repeat(5, 1fr)\"\r\n                    }}\r\n                >\r\n                    {/* Row 1 */}\r\n                    <div\r\n                        className=\"border h-100\"\r\n                        style={{\r\n                            display: \"grid\",\r\n                            gridTemplateRows: \"1fr 0 1fr\"\r\n                        }}\r\n                    >\r\n                        <div id=\"common-name\" className=\"cell\">\r\n                            <h6 className=\"cell-name\">Common Name: </h6>\r\n                            <div className=\"cell-content\">\r\n                                <select\r\n                                    id=\"common-name-selector\"\r\n                                    className=\"form-control\"\r\n                                    defaultValue=\"\"\r\n                                    ref={input => (this.menu = input)}\r\n                                >\r\n                                    {setInterval(() => {\r\n                                        presentSpecies = this.menu.value\r\n                                            ? this.menu.value\r\n                                            : undefined;\r\n                                        ReactDOM.render(\r\n                                            <Router />,\r\n                                            document.getElementById(\"root\")\r\n                                        );\r\n                                    }, 500)}\r\n                                    <option value=\"\">\r\n                                        Select by Common Name\r\n                                    </option>\r\n                                    {data.data.species.map(option => {\r\n                                        return (\r\n                                            <option\r\n                                                value={option.index}\r\n                                                key={option.id}\r\n                                            >\r\n                                                {option.common_name}\r\n                                            </option>\r\n                                        );\r\n                                    })}\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <hr className=\"m-0\" />\r\n                        <div id=\"latin-name\" className=\"cell\">\r\n                            <h6 className=\"cell-name\">Latin Name: </h6>\r\n                            <div className=\"cell-content\">\r\n                                {presentSpecies\r\n                                    ? data.data.species[presentSpecies]\r\n                                          .latin_name\r\n                                    : \"\"}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div\r\n                        className=\"border h-100\"\r\n                        style={{\r\n                            display: \"grid\",\r\n                            gridTemplateRows: \"1fr 0 1fr 0 1fr\"\r\n                        }}\r\n                    >\r\n                        <div id=\"\" className=\"cell\">\r\n                            <h6 className=\"cell-name\">Missing 2: </h6>\r\n                            <div className=\"cell-content\">\r\n                                {presentSpecies\r\n                                    ? data.data.species[presentSpecies].missing2\r\n                                    : \"\"}\r\n                            </div>\r\n                        </div>\r\n                        <hr className=\"m-0\" />\r\n                        <div id=\"\" className=\"cell\">\r\n                            <h6 className=\"cell-name\">Missing 3: </h6>\r\n                            <div className=\"cell-content\">\r\n                                {presentSpecies\r\n                                    ? data.data.species[presentSpecies].missing3\r\n                                    : \"\"}\r\n                            </div>\r\n                        </div>\r\n                        <hr className=\"m-0\" />\r\n                        <div id=\"\" className=\"cell\">\r\n                            <h6 className=\"cell-name\">Missing 4: </h6>\r\n                            <div className=\"cell-content\">\r\n                                {presentSpecies\r\n                                    ? data.data.species[presentSpecies].missing4\r\n                                    : \"\"}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"conservation-status\" className=\"cell border h-100\">\r\n                        <h6 className=\"cell-name\">Conservation Status: </h6>\r\n                        <div className=\"cell-content\">\r\n                            {presentSpecies ? (\r\n                                <div className=\"text-center\">\r\n                                    <b>\r\n                                        {\r\n                                            data.data.species[presentSpecies]\r\n                                                .conservation_status.name\r\n                                        }\r\n                                    </b>\r\n                                    <br />\r\n                                    <img\r\n                                        src={require(\"../data/images/conservation_status/\" +\r\n                                            data.data.species[presentSpecies]\r\n                                                .conservation_status.icon +\r\n                                            \".png\")}\r\n                                        style={{ width: \"100%\" }}\r\n                                        alt=\"Conservation Status Icon\"\r\n                                    />\r\n                                </div>\r\n                            ) : (\r\n                                \"\"\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                    {/* Row 2 */}\r\n                    <div id=\"description\" className=\"cell border h-100\">\r\n                        <h6 className=\"cell-name\">Description: </h6>\r\n                        <div className=\"cell-content\">\r\n                            {presentSpecies\r\n                                ? data.data.species[presentSpecies].description\r\n                                : \"\"}\r\n                        </div>\r\n                    </div>\r\n                    <div\r\n                        id=\"gallery\"\r\n                        className=\"cell border h-100\"\r\n                        style={{\r\n                            gridArea: \"2 / 2 / 4 / 4\"\r\n                        }}\r\n                    >\r\n                        <div className=\"cell-content\">\r\n                            <div\r\n                                id=\"gallery-carousel\"\r\n                                className=\"carousel slide\"\r\n                                style={{\r\n                                    // maxHeight: 200.534,\r\n                                    // maxWidth: 500.334\r\n                                    height: document.getElementById(\"gallery\")\r\n                                        .clientHeight,\r\n                                    width: document.getElementById(\"gallery\")\r\n                                        .clientWidth\r\n                                }}\r\n                                data-ride=\"carousel\"\r\n                                data-interval=\"false\"\r\n                            >\r\n                                <ol className=\"carousel-indicators\">\r\n                                    {presentSpecies\r\n                                        ? data.data.species[\r\n                                              presentSpecies\r\n                                          ].gallery.map((image, index) => {\r\n                                              return (\r\n                                                  <li\r\n                                                      data-target=\"#gallery-carousel\"\r\n                                                      data-slide-to={index}\r\n                                                      className={\r\n                                                          index === 0\r\n                                                              ? \" active\"\r\n                                                              : \"\"\r\n                                                      }\r\n                                                      key={\"si\" + index}\r\n                                                  />\r\n                                              );\r\n                                          })\r\n                                        : \"\"}\r\n                                    <li\r\n                                        data-target=\"#carouselExampleIndicators\"\r\n                                        data-slide-to=\"1\"\r\n                                    />\r\n                                    <li\r\n                                        data-target=\"#carouselExampleIndicators\"\r\n                                        data-slide-to=\"2\"\r\n                                    />\r\n                                </ol>\r\n                                <div className=\"carousel-inner\">\r\n                                    {presentSpecies\r\n                                        ? data.data.species[\r\n                                              presentSpecies\r\n                                          ].gallery.map((image, index) => {\r\n                                              return (\r\n                                                  <div\r\n                                                      className={\r\n                                                          \"carousel-item\" +\r\n                                                          (index === 0\r\n                                                              ? \" active\"\r\n                                                              : \"\")\r\n                                                      }\r\n                                                      key={\"si\" + index}\r\n                                                  >\r\n                                                      <img\r\n                                                          className=\"d-block w-100\"\r\n                                                          src={image}\r\n                                                          style={{\r\n                                                              maxHeight: 200.534,\r\n                                                              maxWidth: 500.334\r\n                                                          }}\r\n                                                          alt=\"Spider Gallery\"\r\n                                                      />\r\n                                                  </div>\r\n                                              );\r\n                                          })\r\n                                        : \"\"}\r\n                                </div>\r\n                                <a\r\n                                    className=\"carousel-control-prev\"\r\n                                    href=\"#gallery-carousel\"\r\n                                    role=\"button\"\r\n                                    data-slide=\"prev\"\r\n                                >\r\n                                    <span className=\"carousel-control-prev-icon\" />\r\n                                </a>\r\n                                <a\r\n                                    className=\"carousel-control-next\"\r\n                                    href=\"#gallery-carousel\"\r\n                                    role=\"button\"\r\n                                    data-slide=\"next\"\r\n                                >\r\n                                    <span className=\"carousel-control-next-icon\" />\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {/* Row 3 */}\r\n                    <div id=\"\" className=\"cell border h-100\">\r\n                        <h6 className=\"cell-name\">Missing 1: </h6>\r\n                        <div className=\"cell-content\">\r\n                            {presentSpecies\r\n                                ? data.data.species[presentSpecies].missing1\r\n                                : \"\"}\r\n                        </div>\r\n                    </div>\r\n                    {/* Row 4 */}\r\n                    <div id=\"diet\" className=\"cell border h-100\">\r\n                        <h6 className=\"cell-name\">Diet: </h6>\r\n                        <div className=\"cell-content\">\r\n                            {presentSpecies\r\n                                ? data.data.species[presentSpecies].diet\r\n                                : \"\"}\r\n                        </div>\r\n                    </div>\r\n                    <div\r\n                        id=\"distribution\"\r\n                        className=\"cell border h-100\"\r\n                        style={{ gridArea: \"4 / 2 / 6 / 3\" }}\r\n                    >\r\n                        <h6 className=\"cell-name\">Distribution: </h6>\r\n                        <div className=\"cell-content\">\r\n                            {presentSpecies ? (\r\n                                <img\r\n                                    src={require(\"../data/images/distribution/\" +\r\n                                        data.data.species[presentSpecies]\r\n                                            .index +\r\n                                        \".png\")}\r\n                                    style={{\r\n                                        maxHeight: \"100%\",\r\n                                        maxWidth: \"100%\"\r\n                                    }}\r\n                                    alt=\"Species Distribution\"\r\n                                />\r\n                            ) : (\r\n                                \"\"\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                    <div\r\n                        id=\"\"\r\n                        className=\"cell border h-100\"\r\n                        style={{ gridArea: \"4 / 3 / 6 / 4\" }}\r\n                    >\r\n                        <h6 className=\"cell-name\">Missing 5: </h6>\r\n                        <div className=\"cell-content\">\r\n                            {presentSpecies\r\n                                ? data.data.species[presentSpecies].missing5\r\n                                : \"\"}\r\n                        </div>\r\n                    </div>\r\n                    {/* Row 5 */}\r\n                    <div id=\"habitat\" className=\"cell border h-100\">\r\n                        <h6 className=\"cell-name\">Habitat: </h6>\r\n                        <div className=\"cell-content\">\r\n                            {presentSpecies\r\n                                ? data.data.species[presentSpecies].habitat\r\n                                : \"\"}\r\n                        </div>\r\n                        <div />\r\n                    </div>\r\n                </div>\r\n                <style>\r\n                    {\r\n                        \"\\\r\n                        #outer-grid > div {\\\r\n                            padding: 2px;\\\r\n                        }\\\r\n                        \\\r\n                        .cell-name {\\\r\n                            font-size: 14px;\\\r\n                            margin-bottom: 2px;\\\r\n                        }\\\r\n                        .cell-content {\\\r\n                            padding: 2px 2px 0 2px;\\\r\n                            font-size: 12px;\\\r\n                        }\\\r\n                    \"\r\n                    }\r\n                </style>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Species;\r\n"]},"metadata":{},"sourceType":"module"}